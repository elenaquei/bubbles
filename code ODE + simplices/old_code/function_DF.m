function DF = function_DF(X,Xs,tau,K)
N = ((size(X)*[1;0] - 7)/3 - 1)/2;
u=X(1); p=X(2); R0=X(3); phi=X(4); epsilon=X(5); eta1=X(6); eta2=X(7);
    a0=X(8:8+2*N);  a1=X(9+2*N:9+4*N);  a2=X(10+4*N:end);
% Steady state
DF_equilib = [-1 + R0*exp(-p*u)*(1-2*u) - p*R0*exp(-p*u)*u*(1-u),...
    -u*R0*exp(-p*u)*u*(1-u), exp(-p*u)*u*(1-u), zeros(1,length(X)-3)];
% Phase
DF_phase = [zeros(1,7),-1i*Xs(8:8+2*N)'*K,zeros(1,2*(2*N+1))]; 
% Amplitude
DF_amplitude = [zeros(1,7),Xs(8:8+2*N)'*K^2,zeros(1,2*(2*N+1))];
% Boundary conditions
DF_BC1 = [0, sum(a0)*exp(-epsilon*p*sum(a0)), 0, 0, ...
    -function_D_eps_g(p*sum(a0),epsilon), 0, 0, ...
    ones(1,2*N+1)*p*exp(-epsilon*p*sum(a0)), ...
    ones(1,2*N+1), zeros(1,2*N+1)] ;  
DF_BC2 = [0, epsilon*sum(a0)*exp(-epsilon*p*sum(a0)), 0, 0, ...
    p*sum(a0)*exp(-epsilon*p*sum(a0)), 0, 0, ...
    ones(1,2*N+1)*epsilon*p*exp(-epsilon*p*sum(a0)), zeros(1,2*N+1), ...
    ones(1,2*N+1)];
% Vector field : Du
dtau = diag(exp(-1i*tau*phi*(-N:N)));
DfPO_u0 = -p*R0*exp(-p*u)*(dtau*a1)*u*(1-u)...  
    + R0*exp(-p*u)*(dtau*a1)*(1-2*u)...
    - p*R0*exp(-p*u)*Convo((dtau*a2),(-epsilon*Convo(a0,a0)+(1-2*u)*a0))...
    + R0*exp(-p*u)*Convo((dtau*a2),-2*a0);
DfPO_u = [DfPO_u0 ; -p*Convo(a2, DfPO_u0) ; -epsilon*p*Convo(a2, DfPO_u0)];
% Vector field: Dp
f0 = -a0 + R0*exp(-p*u)*(dtau*a1*u*(1-u)...
    + Convo(dtau*a2,-epsilon*Convo(a0,a0)+(1-2*u)*a0));
f0_p = -u*(f0+a0);
DfPO_p = [zeros(2*N+1,1);-Convo(a2,f0);-epsilon*Convo(a2,f0)]...
    + [f0_p; -p*Convo(a2,f0_p); -epsilon*p*Convo(a2,f0_p)];
% Vector field: DR0
f0_R0 = exp(-p*u)*(dtau*a1)*u*(1-u)...
    + exp(-p*u)*Convo(dtau*a2,-epsilon*Convo(a0,a0) + (1-2*u)*a0);
DfPO_R0 = [f0_R0;-p*Convo(a2,f0_R0);-epsilon*p*Convo(a2,f0_R0)];
% Vector field: Dphi
ddtau = -1i*tau*diag(-N:N)*dtau;
f0_phi = R0*exp(-p*u)*ddtau*a1*u*(1-u)...
    + R0*exp(-p*u)*Convo(ddtau*a2,-epsilon*Convo(a0,a0)+(1-2*u)*a0);
DfPO_phi = -1i*[K*a0;K*a1;K*a2]...
    + [f0_phi; -p*Convo(a2,f0_phi);-epsilon*p*Convo(a2,f0_phi)];
% Vector field: Depsilon
f0_eps = R0*exp(-p*u)*Convo(dtau*a2,-Convo(a0,a0));
DfPO_eps = [f0_eps; -p*Convo(a2,f0_eps); -epsilon*p*Convo(a2,f0_eps)]...
    + [zeros(2*(2*N+1),1); -p*Convo(a2,f0)];
% Vector field: Deta1 and Deta2
DfPO_eta1 = [zeros(2*N+1,1);zeros(N,1);1;zeros(N,1);zeros(2*N+1,1)];
DfPO_eta2 = [zeros(2*N+1,1);zeros(2*N+1,1);zeros(N,1);1;zeros(N,1)];
% Vector field: Da0
e0 = [zeros(N,1);1;zeros(N,1)];
df0_a0_star = -e0 + R0*exp(-p*u)*Convo(dtau*a2,-2*epsilon*a0 + (1-2*u)*e0);
DfPO_a0 = [-1i*phi*K + Convo_mat(df0_a0_star);...
    -p*Convo_mat(Convo(a2,df0_a0_star));...
    -epsilon*p*Convo_mat(Convo(a2,df0_a0_star))];
% Vector field: Da1
df0_a1_star = R0*exp(-p*u)*dtau*u*(1-u);
DfPO_a1 = [df0_a1_star;...
    -1i*phi*K - p*Convo_mat(a2)*df0_a1_star;...
    -epsilon*p*Convo_mat(a2)*df0_a1_star];
% Vector field: Da2
df0_a2_star = R0*exp(-p*u)*(-epsilon*Convo(a0,a0)+(1-2*u)*a0);
DfPO_a2 = [Convo_mat(df0_a2_star)*dtau;...
    -p*Convo_mat(f0) - p*Convo_mat(Convo(a2,df0_a2_star))*dtau;...
    -1i*phi*K - epsilon*p*Convo_mat(f0)...
    - epsilon*p*Convo_mat(Convo(a2,df0_a2_star))*dtau];
% Gather all blocks
DF_vfield = [DfPO_u, DfPO_p, DfPO_R0,DfPO_phi,DfPO_eps,DfPO_eta1,...
    DfPO_eta2,DfPO_a0,DfPO_a1,DfPO_a2];
DF = [DF_equilib; DF_phase; DF_amplitude; DF_BC1; DF_BC2; DF_vfield];
end